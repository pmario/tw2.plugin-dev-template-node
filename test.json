[
    {
        "bag": "tiddlywiki-com_public", 
        "created": "20110211112155", 
        "creator": "psd", 
        "fields": {
            "_hash": "07e0e9a0ac9f3453da57e3e3254a212ac2492d77"
        }, 
        "modified": "20110211131020", 
        "modifier": "blaine", 
        "permissions": [
            "read"
        ], 
        "recipe": null, 
        "revision": 297866, 
        "tags": [
            "systemConfig"
        ], 
        "text": "/***\n|''Name''|SimpleSearchPlugin|\n|''Description''|displays search results as a simple list of matching tiddlers|\n|''Authors''|FND|\n|''Version''|0.4.1|\n|''Status''|stable|\n|''Source''|http://devpad.tiddlyspot.com/#SimpleSearchPlugin|\n|''CodeRepository''|http://svn.tiddlywiki.org/Trunk/contributors/FND/plugins/SimpleSearchPlugin.js|\n|''License''|[[Creative Commons Attribution-ShareAlike 3.0 License|http://creativecommons.org/licenses/by-sa/3.0/]]|\n|''Keywords''|search|\n!Revision History\n!!v0.2.0 (2008-08-18)\n* initial release\n!!v0.3.0 (2008-08-19)\n* added Open All button (renders Classic Search option obsolete)\n* sorting by relevance (title matches before content matches)\n!!v0.4.0 (2008-08-26)\n* added tag matching\n!To Do\n* tag matching optional\n* animations for container creation and removal\n* when clicking on search results, do not scroll to the respective tiddler (optional)\n* use template for search results\n!Code\n***/\n//{{{\nif(!version.extensions.SimpleSearchPlugin) { //# ensure that the plugin is only installed once\nversion.extensions.SimpleSearchPlugin = { installed: true };\n\nif(!config.extensions) { config.extensions = {}; }\n\nconfig.extensions.SimpleSearchPlugin = {\n\theading: \"Search Results\",\n\tcontainerId: \"searchResults\",\n\tbtnCloseLabel: \"close\",\n\tbtnCloseTooltip: \"dismiss search results\",\n\tbtnCloseId: \"search_close\",\n\tbtnOpenLabel: \"Open all\",\n\tbtnOpenTooltip: \"open all search results\",\n\tbtnOpenId: \"search_open\",\n\n\tdisplayResults: function(matches, query) {\n\t\tstory.refreshAllTiddlers(true); // update highlighting within story tiddlers\n\t\tvar el = document.getElementById(this.containerId);\n\t\tquery = '\"\"\"' + query + '\"\"\"'; // prevent WikiLinks\n\t\tif(el) {\n\t\t\tremoveChildren(el);\n\t\t} else { //# fallback: use displayArea as parent\n\t\t\tvar container = document.getElementById(\"displayArea\");\n\t\t\tel = document.createElement(\"div\");\n\t\t\tel.id = this.containerId;\n\t\t\tel = container.insertBefore(el, container.firstChild);\n\t\t}\n\t\tvar msg = \"!\" + this.heading + \"\\n\";\n\t\tif(matches.length > 0) {\n\t\t\tmsg += \"''\" + config.macros.search.successMsg.format([matches.length.toString(), query]) + \":''\\n\";\n\t\t\tthis.results = [];\n\t\t\tfor(var i = 0 ; i < matches.length; i++) {\n\t\t\t\tthis.results.push(matches[i].title);\n\t\t\t\tmsg += \"* [[\" + matches[i].title + \"]]\\n\";\n\t\t\t}\n\t\t} else {\n\t\t\tmsg += \"''\" + config.macros.search.failureMsg.format([query]) + \"''\"; // XXX: do not use bold here!?\n\t\t}\n\t\tcreateTiddlyButton(el, this.btnCloseLabel, this.btnCloseTooltip, config.extensions.SimpleSearchPlugin.closeResults, \"button\", this.btnCloseId);\n\t\twikify(msg, el);\n\t\tif(matches.length > 0) { // XXX: redundant!?\n\t\t\tcreateTiddlyButton(el, this.btnOpenLabel, this.btnOpenTooltip, config.extensions.SimpleSearchPlugin.openAll, \"button\", this.btnOpenId);\n\t\t}\n\t},\n\n\tcloseResults: function() {\n\t\tvar el = document.getElementById(config.extensions.SimpleSearchPlugin.containerId);\n\t\tremoveNode(el);\n\t\tconfig.extensions.SimpleSearchPlugin.results = null;\n\t\thighlightHack = null;\n\t},\n\n\topenAll: function(ev) {\n\t\tstory.displayTiddlers(null, config.extensions.SimpleSearchPlugin.results);\n\t\treturn false;\n\t}\n};\n\nconfig.shadowTiddlers.StyleSheetSimpleSearch = \"/*{{{*/\\n\" +\n\t\"#\" + config.extensions.SimpleSearchPlugin.containerId + \" {\\n\" +\n\t\"\\toverflow: auto;\\n\" +\n\t\"\\tpadding: 5px 1em 10px;\\n\" +\n\t\"\\tbackground-color: [[ColorPalette::TertiaryPale]];\\n\" +\n\t\"}\\n\\n\" +\n\t\"#\" + config.extensions.SimpleSearchPlugin.containerId + \" h1 {\\n\" +\n\t\"\\tmargin-top: 0;\\n\" +\n\t\"\\tborder: none;\\n\" +\n\t\"}\\n\\n\" +\n\t\"#\" + config.extensions.SimpleSearchPlugin.containerId + \" ul {\\n\" +\n\t\"\\tmargin: 0.5em;\\n\" +\n\t\"\\tpadding-left: 1.5em;\\n\" +\n\t\"}\\n\\n\" +\n\t\"#\" + config.extensions.SimpleSearchPlugin.containerId + \" .button {\\n\" +\n\t\"\\tdisplay: block;\\n\" +\n\t\"\\tborder-color: [[ColorPalette::TertiaryDark]];\\n\" +\n\t\"\\tpadding: 5px;\\n\" +\n\t\"\\tbackground-color: [[ColorPalette::TertiaryLight]];\\n\" +\n\t\"}\\n\\n\" +\n\t\"#\" + config.extensions.SimpleSearchPlugin.containerId + \" .button:hover {\\n\" +\n\t\"\\tborder-color: [[ColorPalette::SecondaryMid]];\\n\" +\n\t\"\\tbackground-color: [[ColorPalette::SecondaryLight]];\\n\" +\n\t\"}\\n\\n\" +\n\t\"#\" + config.extensions.SimpleSearchPlugin.btnCloseId + \" {\\n\" +\n\t\"\\tfloat: right;\\n\" +\n\t\"\\tmargin: -5px -1em 5px 5px;\\n\" +\n\t\"}\\n\\n\" +\n\t\"#\" + config.extensions.SimpleSearchPlugin.btnOpenId + \" {\\n\" +\n\t\"\\tfloat: left;\\n\" +\n\t\"\\tmargin-top: 5px;\\n\" +\n\t\"}\\n\" +\n\t\"/*}}}*/\";\nstore.addNotification(\"StyleSheetSimpleSearch\", refreshStyles);\n\n// override Story.search()\nStory.prototype.search = function(text, useCaseSensitive, useRegExp) {\n\thighlightHack = new RegExp(useRegExp ? text : text.escapeRegExp(), useCaseSensitive ? \"mg\" : \"img\");\n\tvar matches = store.search(highlightHack, null, \"excludeSearch\");\n\tvar q = useRegExp ? \"/\" : \"'\";\n\tconfig.extensions.SimpleSearchPlugin.displayResults(matches, q + text + q);\n};\n\n// override TiddlyWiki.search() to sort by relevance\nTiddlyWiki.prototype.search = function(searchRegExp, sortField, excludeTag, match) {\n\tvar candidates = this.reverseLookup(\"tags\", excludeTag, !!match);\n\tvar primary = [];\n\tvar secondary = [];\n\tvar tertiary = [];\n\tfor(var t = 0; t < candidates.length; t++) {\n\t\tif(candidates[t].title.search(searchRegExp) != -1) {\n\t\t\tprimary.push(candidates[t]);\n\t\t} else if(candidates[t].tags.join(\" \").search(searchRegExp) != -1) {\n\t\t\tsecondary.push(candidates[t]);\n\t\t} else if(candidates[t].text.search(searchRegExp) != -1) {\n\t\t\ttertiary.push(candidates[t]);\n\t\t}\n\t}\n\tvar results = primary.concat(secondary).concat(tertiary);\n\tif(sortField) {\n\t\tresults.sort(function(a, b) {\n\t\t\treturn a[sortField] < b[sortField] ? -1 : (a[sortField] == b[sortField] ? 0 : +1);\n\t\t});\n\t}\n\treturn results;\n};\n\n} //# end of \"install only once\"\n//}}}\n", 
        "title": "SimpleSearchPlugin", 
        "type": null, 
        "uri": "http://tiddlywiki-com.tiddlyspace.com/bags/tiddlywiki-com_public/tiddlers/SimpleSearchPlugin"
    }
]
